{"version":3,"sources":["ng://ng-scroll-detector/lib/ng-scroll-detector.service.ts","ng://ng-scroll-detector/lib/ng-scroll-detector.component.ts","ng://ng-scroll-detector/lib/ng-scroll.directive.ts","ng://ng-scroll-detector/lib/ng-scroll-detector.module.ts"],"names":["NgScrollDetectorService","Injectable","args","providedIn","NgScrollDetectorComponent","prototype","ngOnInit","Component","selector","template","elemntscrollTracker","this","scrolled","EventEmitter","onScroll","event","tracker","target","endReachedVerticle","endReachedHorizontal","limitVerticle","scrollHeight","clientHeight","limitHorizontal","scrollWidth","clientWidth","scrollTop","scrollLeft","emit","posVerticle","posHorizontal","Directive","Output","HostListener","htmlbodyscrollTracker","bodyscrolled","verticalOffset","window","pageYOffset","document","documentElement","body","HorizontalOffset","pageXOffset","NgScrollDetectorModule","NgModule","declarations","imports","CommonModule","BrowserModule","exports"],"mappings":"gbAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,wJAHd,GCAAC,EAAA,WAaE,SAAAA,KAKF,OAHEA,EAAAC,UAAAC,SAAA,iCAbDC,EAAAA,UAASL,KAAA,CAAC,CACTM,SAAU,yBACVC,SAAU,qGAcZL,EAlBA,GCAAM,EAAA,WAEE,SAAAA,IAKYC,KAAAC,SAAW,IAAIC,EAAAA,aA6B3B,OA1BEH,EAAAL,UAAAS,SADA,SACSC,OAIHC,EAAUD,EAAME,OAChBC,GAAqB,EACrBC,GAAuB,EACvBC,EAAgBJ,EAAQK,aAAeL,EAAQM,aAC/CC,EAAkBP,EAAQQ,YAAcR,EAAQS,YAGhDV,EAAME,OAAOS,YAAcN,IAE7BF,GAAqB,GAEnBH,EAAME,OAAOU,aAAeJ,IAE9BJ,GAAuB,GAEzBR,KAAKC,SAASgB,KAAK,CACjBC,YAAad,EAAME,OAAOS,UAC1BR,mBAAkBA,EAClBY,cAAcf,EAAME,OAAOU,WAC3BR,qBAAoBA,yBA/BzBY,EAAAA,UAAS7B,KAAA,CAAC,CACTM,SAAU,8DAITwB,EAAAA,yBAEAC,EAAAA,aAAY/B,KAAA,CAAC,SAAU,CAAC,cA2B3BQ,EApCF,GAqCE,IAAAwB,EAAA,WAAA,SAAAA,IAIYvB,KAAAwB,aAAe,IAAItB,EAAAA,aAe/B,OAbEqB,EAAA7B,UAAAS,SADA,SACSC,OACCqB,EAAiBC,OAAOC,aACzBC,SAASC,gBAAgBd,WACzBa,SAASE,KAAKf,WAAa,EACzBgB,EAAmBL,OAAOM,aAC5BJ,SAASC,gBAAgBb,YACzBY,SAASE,KAAKd,YAAc,EAEnChB,KAAKwB,aAAaP,KAAK,CACnBQ,eAAcA,EACdM,iBAAgBA,yBAhBvBX,EAAAA,UAAS7B,KAAA,CAAC,CACTM,SAAU,oEAGTwB,EAAAA,yBACAC,EAAAA,aAAY/B,KAAA,CAAC,gBAAiB,CAAC,cAclCgC,EAnBA,GCrCF,IAAAU,EAAA,WAQA,SAAAA,KAOsC,2BAPrCC,EAAAA,SAAQ3C,KAAA,CAAC,CACR4C,aAAc,CAAC1C,EAA2BM,EAAoBwB,GAC9Da,QAAS,CACPC,EAAAA,aAAcC,EAAAA,eAEhBC,QAAS,CAAC9C,EAA0BM,EAAoBwB,OAEpBU,EAftC","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgScrollDetectorService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-ng-scroll-detector',\n  template: `\n    <p>\n      ng-scroll-detector works!\n    </p>\n  `,\n  styles: []\n})\nexport class NgScrollDetectorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Directive, HostListener, Output, EventEmitter}from '@angular/core';\n  \n  @Directive({\n    selector: '[elemntscrollTracker]',\n  })\n  \n  export class elemntscrollTracker {\n    @Output() scrolled = new EventEmitter<any>();\n  \n    @HostListener('scroll', ['$event'])\n    onScroll(event) {\n      // do tracking\n      // console.log('scrolled', event.target.scrollTop);\n      // Listen to click events in the component\n      let tracker = event.target;\n      let endReachedVerticle = false;\n      let endReachedHorizontal = false;\n      let limitVerticle = tracker.scrollHeight - tracker.clientHeight;\n      let limitHorizontal = tracker.scrollWidth - tracker.clientWidth;\n      // alert(event.target.scrollLeft);\n     // console.log(event.target.scrollTop, limitVerticle);\n      if (event.target.scrollTop === limitVerticle) {\n        // alert('end reached');\n        endReachedVerticle = true;\n      }\n      if (event.target.scrollLeft === limitHorizontal) {\n        // alert('end reached bottom');\n        endReachedHorizontal = true;\n      }\n      this.scrolled.emit({\n        posVerticle: event.target.scrollTop,\n        endReachedVerticle,\n        posHorizontal:event.target.scrollLeft,\n        endReachedHorizontal\n      })\n    }\n  }\n  @Directive({\n    selector: '[htmlbodyscrollTracker]',\n  })\n  export class htmlbodyscrollTracker {\n    @Output() bodyscrolled = new EventEmitter<any>();\n    @HostListener('window:scroll', ['$event'])\n    onScroll(event) {\n        const verticalOffset = window.pageYOffset \n          || document.documentElement.scrollTop \n          || document.body.scrollTop || 0;\n         const HorizontalOffset = window.pageXOffset \n          || document.documentElement.scrollLeft\n          || document.body.scrollLeft || 0;\n      \n      this.bodyscrolled.emit({\n          verticalOffset,\n          HorizontalOffset,\n      })\n    }\n  }","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { NgScrollDetectorComponent } from './ng-scroll-detector.component';\nimport { elemntscrollTracker,htmlbodyscrollTracker } from './ng-scroll.directive';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [NgScrollDetectorComponent, elemntscrollTracker,htmlbodyscrollTracker],\n  imports: [\n    CommonModule, BrowserModule\n  ],\n  exports: [NgScrollDetectorComponent,elemntscrollTracker,htmlbodyscrollTracker]\n})\nexport class NgScrollDetectorModule { }\n"]}